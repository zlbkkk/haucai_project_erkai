version: '3.8'

# 用来快速启动测试平台的前后端，不包含db和mq
# 用到本地的代码构建
# 可以搭配docker-compose-build-db—mq使用
# 或者已有mq和db也是OK的



x-env-mq: &env_mq
  RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
  RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
  MQ_PORT: ${MQ_PORT}
  MQ_HOST: ${MQ_HOST:-mq}
  MQ_ADMIN_PORT: ${MQ_ADMIN_PORT}
  MQ_VHOST: ${MQ_VHOST:-/}

x-env-celery: &env_celery
  SERVER_IP: ${SERVER_IP}
  DJANGO_API_PORT: ${DJANGO_API_PORT}

x-env-app: &env_app
  EMAIL_HOST: ${EMAIL_HOST}
  EMAIL_PORT: ${EMAIL_PORT}
  EMAIL_HOST_USER: ${EMAIL_HOST_USER}
  EMAIL_HOST_PASSWORD: ${EMAIL_HOST_PASSWORD}
  LOKI_USERNAME: ${LOKI_USERNAME}
  LOKI_PASSWORD: ${LOKI_PASSWORD}
  LOKI_URL: ${LOKI_URL}

services:
  app:
    image: fasterrunner_app:latest
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PIP_INDEX_URL: ${PIP_INDEX_URL:-https://pypi.tuna.tsinghua.edu.cn/simple}
        DEBIAN_REPO: ${DEBIAN_REPO:-mirrors.aliyun.com}
    environment:
      <<: [*env_celery, *env_app, *env_mq]
    entrypoint: /app/start.sh
    command: "app"
    restart: always

  celery-worker:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PIP_INDEX_URL: ${PIP_INDEX_URL:-https://pypi.tuna.tsinghua.edu.cn/simple}
        DEBIAN_REPO: ${DEBIAN_REPO:-mirrors.aliyun.com}
    environment:
      <<: [*env_celery, *env_app, *env_mq]
    entrypoint: /app/start.sh
    command: "celery-worker"
    restart: always

  celery-beat:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PIP_INDEX_URL: ${PIP_INDEX_URL:-https://pypi.tuna.tsinghua.edu.cn/simple}
        DEBIAN_REPO: ${DEBIAN_REPO:-mirrors.aliyun.com}
    environment:
      <<: [*env_celery, *env_app, *env_mq]
    command: "celery-beat"
    restart: always

# django-admin & app proxy
  nginx:
    build: ./nginx
    ports:
      - "${DJANGO_ADMIN_PORT}:8000"
    depends_on:
      - app
    restart: always
    environment:
      <<: [*env_celery, *env_app, *env_mq]
  web:
    build:
      context: ./web
      dockerfile: Dockerfile
    ports:
      - "${WEB_PORT}:80"
    volumes:
      - ./web/dist:/usr/share/nginx/html
    environment:
      - FasterRunner=${MYSQL_USER}
    depends_on:
      - app

